version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: postgres-db
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - ./init-scripts:/docker-entrypoint-initdb.d
      - pgdata:/var/lib/postgresql/data

  postgres-backup:
    image: eeshugerman/postgres-backup-s3:16
    environment:
      SCHEDULE: '@daily'
      BACKUP_KEEP_DAYS: 7     # optional
      PASSPHRASE: ${DATABASE_PASSWORD}
      S3_REGION: ${S3_REGION}
      S3_ACCESS_KEY_ID: ${S3_ACCESS_KEY}
      S3_SECRET_ACCESS_KEY: ${S3_ACCESS_KEY_SECRET}
      S3_BUCKET: ${S3_BUCKET_NAME}
      S3_PREFIX: backups/remaster-db-backup
      POSTGRES_HOST: postgres
      POSTGRES_DATABASE: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}

  redis:
    image: redis:latest
    container_name: redis-server
    environment:
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
    ports:
      - "6379:6379"

  remaster:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: ${DATABASE_URL}
      SPRING_DATASOURCE_USERNAME: ${DATABASE_USER}
      SPRING_DATASOURCE_PASSWORD: ${DATABASE_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      ACCESS_TOKEN_SECRET: ${ACCESS_TOKEN_SECRET}
      REFRESH_TOKEN_SECRET: ${REFRESH_TOKEN_SECRET}
      ACCESS_TOKEN_EXPIRES: ${ACCESS_TOKEN_EXPIRES}
      REFRESH_TOKEN_EXPIRES: ${REFRESH_TOKEN_EXPIRES}
      REFRESH_TOKEN_COOKIE_NAME: ${REFRESH_TOKEN_COOKIE_NAME}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
      S3_REGION: ${S3_REGION}
      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_ACCESS_KEY_SECRET: ${S3_ACCESS_KEY_SECRET}
      CLOUDFRONT_DOMAIN: ${CLOUDFRONT_DOMAIN}
      RESEND_KEY: ${RESEND_KEY}
      CLIENT_DOMAIN: ${CLIENT_DOMAIN}

volumes:
  pgdata: